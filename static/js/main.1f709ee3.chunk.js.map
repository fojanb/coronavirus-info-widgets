{"version":3,"sources":["components/CanadaCase/CanadaCase.js","containers/App.js","reportWebVitals.js","index.js"],"names":["CanadaCase","data","this","props","covidData","totalCases","deaths","totalRecovered","activeCases","updateDate","className","id","Component","App","fetchData","a","fetch","method","headers","response","json","setState","Data","state","console","log","class","src","alt","width","height","style","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAmCeA,E,4JAhCb,WACE,IAAIC,EAAOC,KAAKC,MAAMC,UAChBC,EAAaJ,EAAK,oBAClBK,EAASL,EAAK,qBACdM,EAAiBN,EAAK,wBACtBO,EAAcP,EAAK,qBACnBQ,EAAaR,EAAM,eAEzB,OACE,gCACE,sBAAKS,UAAU,SAAf,UACE,sBAAKC,GAAG,aAAR,2BAAoCN,KACpC,sBAAKM,GAAG,aAAR,sBAA+BL,KAC/B,sBAAKK,GAAG,iBAAR,yBAAsCJ,QAGxC,sBAAKG,UAAU,aAAf,UACE,sBAAKA,UAAU,QAAf,UACE,8CACA,4BAAIF,OAEN,sBAAKE,UAAU,QAAf,UACE,8CACA,6CAAgBH,KAChB,0CAAaD,WAGjB,sBAAKK,GAAG,aAAR,2BAAoCF,Y,GA5BnBG,aC6DVC,G,wDAxDb,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IAWRW,UAZmB,sBAYP,8BAAAC,EAAA,sEACWC,MACnB,qDACA,CACEC,OAAQ,MACRC,QAAS,CACP,iBACE,qDACF,kBAAmB,sCARf,cACNC,EADM,gBAYOA,EAASC,OAZhB,OAYNnB,EAZM,OAoBV,EAAKoB,SAAS,CAAEC,KAAMrB,IApBZ,2CAVV,EAAKsB,MAAQ,CACXD,KAAM,IAHS,E,qDAMnB,WAEEE,QAAQC,IAAI,gCACZvB,KAAKY,c,oBA2BP,WACE,OACE,sBAAKJ,UAAU,MAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBACEgB,MAAM,WACNC,IAAI,8DACJC,IAAI,SACJC,MAAM,OACNC,OAAO,SAET,oBAAIC,MAAO,CAACC,MAAM,WAAlB,uBAGF,cAAC,EAAD,CAAY5B,UAAWF,KAAKqB,MAAMD,c,GAnDxBV,cCMHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1f709ee3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./CanadaCase.css\";\r\nclass CanadaCase extends Component {\r\n  render() {\r\n    let data = this.props.covidData;\r\n    const totalCases = data[\"Total Cases_text\"];\r\n    const deaths = data[\"Total Deaths_text\"];\r\n    const totalRecovered = data[\"Total Recovered_text\"];\r\n    const activeCases = data[\"Active Cases_text\"];\r\n    const updateDate = data [\"Last Update\"];\r\n    // **************\r\n    return (\r\n      <div>\r\n        <div className=\"status\">\r\n          <div id=\"totalCases\">Total Cases : {totalCases}</div>\r\n          <div id=\"deathCases\">Deaths : {deaths}</div>\r\n          <div id=\"recoveredCases\">Recovered : {totalRecovered}</div>\r\n        </div>\r\n\r\n        <div className=\"cardHolder\">\r\n          <div className=\"cases\">\r\n            <h5>ACTIVE CASES</h5>\r\n            <p>{activeCases}</p>\r\n          </div>\r\n          <div className=\"cases\">\r\n            <h5>CLOSED CASES</h5>\r\n            <p>Recovered : {totalRecovered}</p>\r\n            <p>Deaths : {deaths}</p>\r\n          </div>\r\n        </div>\r\n        <div id=\"updateDate\">Last Update : {updateDate}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CanadaCase;\r\n","// The API documentation :\n// https://rapidapi.com/slotixsro-slotixsro-default/api/covid-19-tracking\nimport React, { Component } from \"react\";\nimport CanadaCase from \"../components/CanadaCase/CanadaCase\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Data: [],\n    };\n  }\n  componentDidMount() {\n    // Get all entities - GET\n    console.log(\"[App.js] : componentDidMount\");\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    let response = await fetch(\n      \"https://covid-19-tracking.p.rapidapi.com/v1/canada\",\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"75325a75d7msh22965905224246cp10c127jsn6f0689d468fd\",\n          \"x-rapidapi-host\": \"covid-19-tracking.p.rapidapi.com\",\n        },\n      }\n    );\n    let data = await response.json();\n    // console.log(\"data\",data);\n    // const Country_text  = data[\"Country_text\"];\n    // const Total_Recovered_text = data[\"Total Recovered_text\"];\n    // console.log(Total_Recovered_text)\n    // console.log(Country_text);\n\n    // Now update the state :\n    this.setState({ Data: data });\n  };\n\n  // ------------------------------\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"widgetHeader\">\n          <img\n            class=\"flag-img\"\n            src=\"https://covid-19.dataflowkit.com/assets/widget/flags/ca.svg\"\n            alt=\"Canada\"\n            width=\"50px\"\n            height=\"20px\"\n          ></img>\n          <h3 style={{color:'#f1faee'}}>Canada</h3>\n        </div>\n\n        <CanadaCase covidData={this.state.Data}></CanadaCase>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}